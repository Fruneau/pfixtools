match1 {
  type = match;

  match_all = false;
  condition = stress #=;
  condition = stress != yes;
  on_match  = postfix:OK;
  on_fail   = postfix:OK;
}

match2 {
  type = match;

  match_all = true;
  condition = stress >= y;
  condition = stress >i e;
  condition = size CONTAINED_i 12345678;
  condition = encryption_cipher >i rsa;
  condition = encryption_cipher CONTAINS_i sha;
  condition = sasl_method == plain;

  on_match = postfix:OK;
  on_fail  = postfix:OK;
}

match3 {
  type = match;

  match_all = true;
  condition = encryption_cipher =~ /rsa-.*sha/i;
  condition = encryption_cipher =~ //;

  on_match = postfix:OK;
  on_fail  = postfix:OK;
}

match4 {
  type = match;

  match_all = true;
  condition = recipient =i ${sender};

  on_match = postfix:OK;
  on_fail = postfix:OK;
}

hostnames1 {
  type = strlist;

  fields = helo_name,client_name;
  file   = nolock:suffix:1:data/test_hostnames_1;
  file   = nolock:prefix:4:data/test_hostnames_2;
  file   = nolock:suffix:8:data/test_hostnames_3;

  soft_threshold = 1;
  hard_threshold = 5;

  on_hard_match = postfix:OK;
  on_soft_match = postfix:OK;
  on_fail = postfix:OK;
}

hostnames2 {
  type = strlist;

  fields = helo_name,client_name,reverse_client_name;
  file   = nolock:suffix:1:data/test_hostnames_1;
  file   = nolock:prefix:4:data/test_hostnames_2;
  file   = nolock:suffix:8:data/test_hostnames_3;

  soft_threshold = 1;
  hard_threshold = 5;

  on_hard_match = postfix:OK;
  on_soft_match = postfix:OK;
  on_fail = postfix:OK;
}

hostnames3 {
  type = strlist;

  fields = client_name;
  file   = nolock:partial-suffix:1:data/test_hostnames_4;

  on_hard_match = postfix:OK;
  on_fail = postfix:OK;
}

hostnames4 {
  type = strlist;

  fields = client_name;
  file   = nolock:partial-suffix:1:data/test_hostnames_5;

  on_hard_match = postfix:OK;
  on_fail = postfix:OK;
}

emails1 {
  type = strlist;

  fields = sender;
  file   = nolock:suffix:1:data/test_emails_1;
  file   = nolock:prefix:4:data/test_emails_2;
  file   = nolock:suffix:8:data/test_emails_3;

  soft_threshold = 1;
  hard_threshold = 5;

  on_hard_match = postfix:ok;
  on_soft_match = postfix:ok;
  on_fail = postfix:ok;
}

emails2 {
  type = strlist;

  fields = sender,recipient;
  file   = nolock:suffix:1:data/test_emails_1;
  file   = nolock:prefix:4:data/test_emails_2;
  file   = nolock:suffix:8:data/test_emails_3;

  soft_threshold = 1;
  hard_threshold = 5;

  on_hard_match = postfix:ok;
  on_soft_match = postfix:ok;
  on_fail = postfix:ok;
}

emails3 {
  type = strlist;

  fields = sender;
  file   = nolock:partial-prefix:1:data/test_emails_4;

  on_hard_match = postfix:ok;
  on_fail = postfix:ok;
}

ips1 {
  type = iplist;

  file = nolock:1:data/test_ip_1;
  file = nolock:1:data/test_ip_2;

  soft_threshold = 1;
  hard_threshold = 2;

  on_hard_match = postfix:OK;
  on_soft_match = postfix:OK;
}

greylist1 {
  type = greylist;

  prefix = test1_;
  path   = data/;
  delay  = 1;
  retry_window = 4;
  client_awl = 2;
  max_age = 8;
  cleanup_period = 1;
  lookup_by_host = true;

  on_greylist = postfix:OK;
  on_whitelist = postfix:OK;
}

rate1 {
  type = rate;

  prefix = test1_;
  path = data/;
  delay = 5;
  key = ${client_address};
  soft_threshold = 2;
  hard_threshold = 4;

  on_hard_match = postfix:OK;
  on_fail = postfix:OK;
}

recipient_filter = match1;
